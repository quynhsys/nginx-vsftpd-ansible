        user  nginx;
        worker_processes  auto;
        worker_rlimit_nofile 20480;

        error_log  {{ nginx_log_dir }}/error.log warn;
        pid        /var/run/nginx.pid;

        events {
        worker_connections  4096;
        }

        http {
        server_tokens off;
        include       {{ nginx_install_dir }}/conf/mime.types;
        default_type  application/octet-stream;

        log_format  custom  '$request_completion $request_time $remote_addr - $remote_user [$time_local] $status '
                      '"$request" $body_bytes_sent "$http_referer" '
                      '"$http_user_agent"' '"$upstream_cache_status"' '"[$upstream_addr]"' '"$upstream_status"' '"$upstream_response_time"';

        access_log  {{ nginx_log_dir }}/access.log custom;

        ignore_invalid_headers  on;
        client_body_timeout 300;
        client_header_timeout 300;
        send_timeout        300;

        sendfile        on;
        keepalive_timeout       15 15;

        tcp_nopush     off;
        tcp_nodelay    on;
        server_names_hash_bucket_size 512;
        client_max_body_size 10M;

        gzip on;
        gzip_http_version 1.0;
        gzip_comp_level 5;
        gzip_proxied any;
        gzip_min_length  1100;
        gzip_buffers 16 8k;
        gzip_vary on;
        gzip_types text/plain  text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon image/png image/gif;
        gzip_disable "MSIE [1-6].(?!.*SV1)";

        open_file_cache max=1000 inactive=20s;
        open_file_cache_valid    30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors   on;

        {% if roles == "loadbalancer" %}
server {
        listen 80;
        server_name localhost;
        location /nginx_status {
	   stub_status on;
           access_log off;
           allow 127.0.0.1;
           deny all;
        }

        location / {
           deny all;
        }
        }
      
	include {{ nginx_install_dir }}/*.conf;
        include {{ nginx_nossl_dir }}/*.conf;
        include {{ nginx_ssl_dir }}/*.conf;
        include {{ nginx_params_dir }}/*.conf;
        {% elif roles == "backend" %}
server {
        listen       80;
        server_name  localhost;

        location / {
           deny all;
        }

        location /nginx_status {
           stub_status on;
           access_log off;
           allow 127.0.0.1;
           deny all;
        }

        location ~ ^/(status|ping)$ {
           access_log off;
           allow 127.0.0.1;
           deny all;
           fastcgi_pass unix:/var/run/php_fpm.sock;
           fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
           include fastcgi_params;
        }
        }
	include {{ nginx_config_dir }}/*.conf;
        include {{ nginx_nossl_dir }}/*.conf;
        include {{ nginx_params_dir }}/*.conf;
        {% endif %}

	}
